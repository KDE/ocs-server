<?php
/*
 * on this file gfx inclusion is useless as gfx is already running
 */

class StepsController extends EController
{
	public function index()
	{
		//empty for now
	}
	
	public function _error($s)
	{
		echo '<span style="color:red">'.$s.'</span>';
	}
	
	public function _notify($s)
	{
		echo '<span style="color:green">'.$s.'</span>';
	}
	
	public function step1($args)
	{
		EStructure::view("header");
        
        echo "<h3>Step 1: configuring your database</h3>";
        echo "Please define your database configuration:<br><br>";
        
        $working = false;
        
        $name = EHeaderDataParser::post('name');
        $host = EHeaderDataParser::post('host');
        $user = EHeaderDataParser::post('user');
        $pass = EHeaderDataParser::post('password');
        $pass2 = EHeaderDataParser::post('password2');
        
        if(!empty($name) and !empty($user) and !empty($host) and !empty($pass) and !empty($pass2)){
			if($pass!=$pass2){
				$this->_error('Warning! Your passwords didn\'t match! Please reinsert them!');
			} else {
				$categories_path = ELoader::$prev_path.'/config/database.conf.php';
				
				$cf = new EConfigFile();
				$cf->set_abs_file($categories_path);
				
				$cf->set('name', $name);
				$cf->set('user', $user);
				$cf->set('host', $host);
				$cf->set('password', $pass);
				
				EDatabase::set_db_info($name,$host,$user,$pass);
				EUtility::hide_output(); // hiding output as mysqli functions are surely outputting something
				if(!EDatabase::open_session()){
					EUtility::show_output();
					$this->_error('Couldn\'t open connection to database! Please check config!');
				} else {
					EUtility::show_output();
					$this->_notify('We can connect to database! Configuration saved!');
					$working = true;
					$cf->save();
				}
			}
		}
		
        echo '
        <form action="';
        if(!$working){ echo '/wizard/steps/step1'; } else { echo '/wizard/steps/step2'; }
        echo'" method="post">
			<table border="0">
				<tr><td><input type="text" name="name" value="'.$name.'" placeholder="database name"></td></tr>
				<tr><td><input type="text" name="host" value="'.$host.'" placeholder="host"></td></tr>
				<tr><td><input type="text" name="user" value="'.$user.'" placeholder="user"></td></tr>
				<tr><td><input type="password" name="password" value="'.$pass.'" placeholder="password"></td></tr>
				<tr><td><input type="password" name="password2" value="'.$pass2.'"  placeholder="repeat password"></td></tr>
				
				<tr><td><input style="float:right" type="submit" value="'; 
				if(!$working){ echo 'Try configuration'; } else { echo 'Next step ->'; }
				echo '"></td></tr>
			</table>
        </form>
        ';
        EStructure::view("footer");
	}
	
	public function step2()
	{
		EStructure::view("header");
        
        echo '<h3>Step 2: generating providers.xml file</h3>';
        echo '<p>Here is the autogenerated providers.xml file for your webserver.<br>
        You can briefly modify it before applying it to your server. This will be the one<br>
        you will provide to clients that wants to connect (will it be desktop, web etc..)</p>';
        echo '<p>This configuration will also be responsible for /v1/config OCS call!</p>';
        
        echo '
        <form action="/wizard/steps/step2" method="post">
			<table border="0">
				<tr><td><input type="text" name="name" value="'.$name.'" placeholder="database name"></td></tr>
				<tr><td><input type="text" name="location" value="'.$host.'" placeholder="host"></td></tr>
				<tr><td><input type="text" name="termsofuse" value="'.$user.'" placeholder="user"></td></tr>
				<tr><td><input type="text" name="register" value="'.$pass.'" placeholder="password"></td></tr>
				<tr><td><input type="text" name="contact" value="'.$pass.'" placeholder="password"></td></tr>
				<tr><td><input type="text" name="ssl" value="'.$pass.'" placeholder="password"></td></tr>
				
				<tr><td><input style="float:right" type="submit" value="Generate"></td></tr>
			</table>
        </form>
        ';
        
        EStructure::view("footer");
	}
}

?>
